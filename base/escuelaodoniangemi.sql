-- 1. Tablas Independientes (que no tenían relaciones dobles)
CREATE TABLE "poblacion" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "nombre" varchar NOT NULL,
  "descripcion" text
);
COMMENT ON COLUMN "poblacion"."descripcion" IS 'Descripción del lugar de nacimiento o de trabajo';

CREATE TABLE "dormitorios" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "titulo" varchar NOT NULL,
  "descripcion" text,
  "cupo" integer NOT NULL
);
COMMENT ON COLUMN "dormitorios"."descripcion" IS 'Descripción del dormitorio';

CREATE TABLE "talleres" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "titulo" varchar NOT NULL,
  "descripcion" text
);
COMMENT ON COLUMN "talleres"."descripcion" IS 'Descripción del taller';

CREATE TABLE "salones" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "titulo" varchar NOT NULL,
  "descripcion" text
  -- Se asume que la FK a "talleres_id" en la tabla original era un error o una simplificación no necesaria. 
  -- Si la necesitas, deberías aclarar la relación entre salones y talleres.
);
COMMENT ON COLUMN "salones"."descripcion" IS 'Descripción del salon';

CREATE TABLE "metadata_libro" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "titulo" varchar NOT NULL,
  "descripcion" text
);
COMMENT ON COLUMN "metadata_libro"."descripcion" IS 'Descripción de la metadata del libro';

---
-- 2. Tabla Clases (sin las FK a salones_id y talleres_id)
CREATE TABLE "clases" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "titulo" varchar,
  "descripcion" text
  -- Se eliminaron salones_id y talleres_id
);
COMMENT ON COLUMN "clases"."descripcion" IS 'Descripción de la clase o materia';

---
-- 3. Tabla Alumnos (sin la FK a clases_id)
CREATE TABLE "alumnos" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "nombre" varchar NOT NULL,
  "descripcion" text,
  -- Se eliminó clases_id
  "dormitorios_id" integer NOT NULL,
  "nacimiento_id" integer NOT NULL,
  "trabajo_id" integer NOT NULL
);
COMMENT ON COLUMN "alumnos"."descripcion" IS 'Descripción del alumno';

-- 4. Creación de Relaciones Uno a Muchos para Alumnos
ALTER TABLE "alumnos" ADD FOREIGN KEY ("nacimiento_id") REFERENCES "poblacion" ("id");
ALTER TABLE "alumnos" ADD FOREIGN KEY ("trabajo_id") REFERENCES "poblacion" ("id");
ALTER TABLE "alumnos" ADD FOREIGN KEY ("dormitorios_id") REFERENCES "dormitorios" ("id");

---
-- 5. Tablas de Unión Muchos a Muchos (y añadiendo Claves Primarias Compuestas)

CREATE TABLE "clases_salones" (
  "clases_id" int REFERENCES "clases" ("id"),
  "salones_id" int REFERENCES "salones" ("id"),
  PRIMARY KEY ("clases_id", "salones_id")
);

CREATE TABLE "clases_talleres" (
  "clases_id" int REFERENCES "clases" ("id"),
  "talleres_id" int REFERENCES "talleres" ("id"),
  PRIMARY KEY ("clases_id", "talleres_id")
);

CREATE TABLE "alumnos_clases" (
  "clases_id" int REFERENCES "clases" ("id"),
  "alumnos_id" int REFERENCES "alumnos" ("id"),
  PRIMARY KEY ("clases_id", "alumnos_id")
);